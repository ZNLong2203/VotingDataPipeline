services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: [ "CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181" ]
      interval: 10s
      timeout: 5s
      retries: 5
  broker:
    image: confluentinc/cp-kafka:7.4.0
    hostname: broker
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: [ "CMD", "bash", "-c", 'nc -z localhost 9092' ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: voting
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  spark-master:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080"
      - "7077:7077"

  spark-worker:
    image: bitnami/spark:latest
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_MASTER_URL: spark://spark-master:7077

  es_master:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: es_master
    networks:
      - esnet
    ports:
      - 9200:9200
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    environment:
      - node.name=es_master
      - cluster.name=elasticsearch_cluster
      - discovery.seed_hosts=es_slave1,es_slave2
      - cluster.initial_master_nodes=es_master,es_slave1,es_slave2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 30s
      timeout: 20s
      retries: 10

  es_slave1:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: es_slave1
    networks:
      - esnet
    ports:
      - 9201:9200
    volumes:
      - esdata2:/usr/share/elasticsearch/data
    environment:
      - node.name=es_slave1
      - cluster.name=elasticsearch_cluster
      - discovery.seed_hosts=es_master,es_slave2
      - cluster.initial_master_nodes=es_master,es_slave1,es_slave2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  es_slave2:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: es_slave2
    networks:
      - esnet
    ports:
      - 9202:9200
    volumes:
      - esdata3:/usr/share/elasticsearch/data
    environment:
      - node.name=es_slave2
      - cluster.name=elasticsearch_cluster
      - discovery.seed_hosts=es_master,es_slave1
      - cluster.initial_master_nodes=es_master,es_slave1,es_slave2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - "xpack.security.enabled=false"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    container_name: kibana
    networks:
      - esnet
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://es_master:9200
      - "xpack.security.enabled=false"
    depends_on:
      - es_master

volumes:
  esdata1:
    driver: local
  esdata2:
    driver: local
  esdata3:
    driver: local
  pinotController1:
  pinotServer1:
networks:
  esnet:
    driver: bridge